z_vals <- seq(-3, 3, length.out = 100)
grid <- expand.grid(y = y_vals, z = z_vals)
grid$f_value <- with(grid, f(y, z))
point_data<-data.frame(
x = c(-0.5, -0.7, -1.3, -1.9, 0.5, 0.7, 1.3, 1.9),
y = -c(-0.5, -0.7, -1.3, -1.9, 0.5, 0.7, 1.3, 1.9),
shape = c(16, 17, 13, 15, 16, 17, 13, 15)
)
ggplot(grid, aes(x = y, y = z, z = f_value)) +
geom_contour(bins=25,aes( colour = ..level..)) +
scale_color_distiller(palette = "PuBu", direction = 1) +
geom_segment(aes(x=-2.8,y=-2.8,xend=2.8,yend=2.8))+
geom_point(data = point_data, aes(x = x, y = y, shape = factor(shape)),
size=2.7,color="seagreen",inherit.aes = FALSE,
show.legend = FALSE) +
labs(
x = "x",
y = expression(x*"'"),
title = expression(psi(x, x*"'") == 2*x - x*"'")) +
theme(plot.title = element_text(hjust = 0.5,size=16),
axis.text = element_text(size=13),
axis.title = element_text(size=13),
legend.title = element_text(size=13),
legend.text = element_text(size=13))
f <- function(y, z) {0.5*(y-z)^3+0.5*(y+z)^3}
y_vals <- seq(-3, 3, length.out = 100)
z_vals <- seq(-3, 3, length.out = 100)
grid <- expand.grid(y = y_vals, z = z_vals)
grid$f_value <- with(grid, f(y, z))
point_data<-data.frame(
x = c(-0.5, -1, -1.5, -2, 0.5, 1, 1.5, 2),
y = -c(-0.5, -1, -1.5, -2, 0.5, 1, 1.5, 2),
shape = c(16, 17, 13, 15, 16, 17, 13, 15)
)
ggplot(grid, aes(x = y, y = z, z = f_value)) +
geom_contour(bins=25,aes( colour = ..level..)) +
scale_color_distiller(palette = "PuBu", direction = 1) +
geom_segment(aes(x=-2.8,y=-2.8,xend=2.8,yend=2.8))+
geom_point(data = point_data, aes(x = x, y = y, shape = factor(shape)),
size=2.7,color="seagreen",inherit.aes = FALSE,
show.legend = FALSE) +
labs(
x = "x",
y = expression(x*"'"),
title = expression(psi(x, x*"'") == 2*x - x*"'")) +
theme(plot.title = element_text(hjust = 0.5,size=16),
axis.text = element_text(size=13),
axis.title = element_text(size=13),
legend.title = element_text(size=13),
legend.text = element_text(size=13))
f <- function(y, z) {0.5*(y-z)^3+0.25*(y+z)^3}
y_vals <- seq(-3, 3, length.out = 100)
z_vals <- seq(-3, 3, length.out = 100)
grid <- expand.grid(y = y_vals, z = z_vals)
grid$f_value <- with(grid, f(y, z))
point_data<-data.frame(
x = c(-0.5, -1, -1.5, -2, 0.5, 1, 1.5, 2),
y = -c(-0.5, -1, -1.5, -2, 0.5, 1, 1.5, 2),
shape = c(16, 17, 13, 15, 16, 17, 13, 15)
)
ggplot(grid, aes(x = y, y = z, z = f_value)) +
geom_contour(bins=25,aes( colour = ..level..)) +
scale_color_distiller(palette = "PuBu", direction = 1) +
geom_segment(aes(x=-2.8,y=-2.8,xend=2.8,yend=2.8))+
geom_point(data = point_data, aes(x = x, y = y, shape = factor(shape)),
size=2.7,color="seagreen",inherit.aes = FALSE,
show.legend = FALSE) +
labs(
x = "x",
y = expression(x*"'"),
title = expression(psi(x, x*"'") == 2*x - x*"'")) +
theme(plot.title = element_text(hjust = 0.5,size=16),
axis.text = element_text(size=13),
axis.title = element_text(size=13),
legend.title = element_text(size=13),
legend.text = element_text(size=13))
f <- function(y, z) {0.5*(y-z)^2+0.5*(y-z)^3}
y_vals <- seq(-3, 3, length.out = 100)
z_vals <- seq(-3, 3, length.out = 100)
grid <- expand.grid(y = y_vals, z = z_vals)
grid$f_value <- with(grid, f(y, z))
point_data<-data.frame(
x = c(-0.5, -1, -1.5, -2, 0.5, 1, 1.5, 2),
y = -c(-0.5, -1, -1.5, -2, 0.5, 1, 1.5, 2),
shape = c(16, 17, 13, 15, 16, 17, 13, 15)
)
ggplot(grid, aes(x = y, y = z, z = f_value)) +
geom_contour(bins=25,aes( colour = ..level..)) +
scale_color_distiller(palette = "PuBu", direction = 1) +
geom_segment(aes(x=-2.8,y=-2.8,xend=2.8,yend=2.8))+
geom_point(data = point_data, aes(x = x, y = y, shape = factor(shape)),
size=2.7,color="seagreen",inherit.aes = FALSE,
show.legend = FALSE) +
labs(
x = "x",
y = expression(x*"'"),
title = expression(psi(x, x*"'") == 2*x - x*"'")) +
theme(plot.title = element_text(hjust = 0.5,size=16),
axis.text = element_text(size=13),
axis.title = element_text(size=13),
legend.title = element_text(size=13),
legend.text = element_text(size=13))
f <- function(y, z) {2*y-z}
y_vals <- seq(-3, 3, length.out = 100)
z_vals <- seq(-3, 3, length.out = 100)
grid <- expand.grid(y = y_vals, z = z_vals)
grid$f_value <- with(grid, f(y, z))
point_data<-data.frame(
x = c(-0.5, -1, -1.5, -2, 0.5, 1, 1.5, 2),
y = -c(-0.5, -1, -1.5, -2, 0.5, 1, 1.5, 2),
shape = c(16, 17, 13, 15, 16, 17, 13, 15)
)
ggplot(grid, aes(x = y, y = z, z = f_value)) +
geom_contour(bins=25,aes( colour = ..level..)) +
scale_color_distiller(palette = "PuBu", direction = 1) +
geom_segment(aes(x=-2.8,y=-2.8,xend=2.8,yend=2.8))+
geom_point(data = point_data, aes(x = x, y = y, shape = factor(shape)),
size=2.7,color="seagreen",inherit.aes = FALSE,
show.legend = FALSE) +
labs(
x = "x",
y = expression(x*"'"),
title = expression(psi(x, x*"'") == 2*x - x*"'")) +
theme(plot.title = element_text(hjust = 0.5,size=16),
axis.text = element_text(size=13),
axis.title = element_text(size=13),
legend.title = element_text(size=13),
legend.text = element_text(size=13))
source("~/Documents/GitHub/shape-constrained-CIT/examples_of_psi.R", echo=TRUE)
source("~/Documents/GitHub/shape-constrained-CIT/examples_of_psi.R", echo=TRUE)
source("~/Documents/GitHub/shape-constrained-CIT/examples_of_psi.R", echo=TRUE)
source("~/Documents/GitHub/shape-constrained-CIT/examples_of_psi.R", echo=TRUE)
z = seq(1,4.5,0.5)
y = c(1,0.4,-1.2,3,-2,-1,-0.4,1.1)
plot(z,y)
median(y)
y = c(0.1,-1.3,-1.2,-3,2,1,-0.4,1.5)
median(y)
z = seq(5,8.5,0.5)
y = c(0.1,-1.3,-1.2,-3,2,1,-0.4,1.5)
z = seq(5,8.5,0.5)
y = c(0.1,-1.3,-1.2,-3,2,1,-0.4,1.5)
plot(z,y)
y = c(2.1,-0.3,-2.2,-1.3,-2,2,1.4,1.5)
median(y)
z = seq(9,12.5,0.5)
y = c(2.1,-0.3,-2.2,-1.3,-2,2,1.4,1.5)
plot(z,y)
source("~/.active-rstudio-document", echo=TRUE)
# Plot with vertical lines and bin labels
ggplot(combined_data, aes(x = z, y = y)) +
geom_point(color = "black", shape = 16) +  # Solid black points
geom_vline(xintercept = c(0.75, 4.75, 8.75, 12.75), linetype = "dashed", color = "blue") +
annotate("text", x = 2.75, y = max(combined_data$y) + 0.5, label = "A_1", color = "red", size = 5) +
annotate("text", x = 6.75, y = max(combined_data$y) + 0.5, label = "A_2", color = "red", size = 5) +
annotate("text", x = 10.75, y = max(combined_data$y) + 0.5, label = "A_3", color = "red", size = 5) +
labs(title = "Scatterplot of Combined Data Frames with Bins", x = "z", y = "y") +
p
# Plot with vertical lines and bin labels
ggplot(combined_data, aes(x = z, y = y)) +
geom_point(color = "black", shape = 16) +  # Solid black points
geom_vline(xintercept = c(0.75, 4.75, 8.75, 12.75), linetype = "dashed", color = "blue") +
annotate("text", x = 2.75, y = max(combined_data$y) + 0.5, label = "A_1", color = "red", size = 5) +
annotate("text", x = 6.75, y = max(combined_data$y) + 0.5, label = "A_2", color = "red", size = 5) +
annotate("text", x = 10.75, y = max(combined_data$y) + 0.5, label = "A_3", color = "red", size = 5) +
labs(title = "Scatterplot of Combined Data Frames with Bins", x = "z", y = "y")
# Plot with vertical lines and bin labels
ggplot(combined_data, aes(x = z, y = y)) +
geom_point(color = "black", shape = 16) +  # Solid black points
geom_vline(xintercept = c(0.75, 4.75, 8.75, 12.75), linetype = "dashed", color = "blue") +
annotate("text", x = 2.75, y = max(combined_data$y) + 0.5, label = expression(A_1), color = "red", size = 5) +
annotate("text", x = 6.75, y = max(combined_data$y) + 0.5, label = "A_2", color = "red", size = 5) +
annotate("text", x = 10.75, y = max(combined_data$y) + 0.5, label = "A_3", color = "red", size = 5) +
labs(title = "Scatterplot of Combined Data Frames with Bins", x = "z", y = "y")
# Plot with vertical lines and bin labels
ggplot(combined_data, aes(x = z, y = y)) +
geom_point(color = "black", shape = 16) +  # Solid black points
geom_vline(xintercept = c(0.75, 4.75, 8.75, 12.75), linetype = "dashed", color = "blue") +
annotate("text", x = 2.75, y = max(combined_data$y) + 0.5, label = expression(A[1]), color = "red", size = 5) +
annotate("text", x = 6.75, y = max(combined_data$y) + 0.5, label = "A_2", color = "red", size = 5) +
annotate("text", x = 10.75, y = max(combined_data$y) + 0.5, label = "A_3", color = "red", size = 5) +
labs(title = "Scatterplot of Combined Data Frames with Bins", x = "z", y = "y")
# Plot with vertical lines and bin labels
ggplot(combined_data, aes(x = z, y = y)) +
geom_point(color = "black", shape = 16) +  # Solid black points
geom_vline(xintercept = c(0.75, 4.75, 8.75, 12.75), linetype = "dashed", color = "black") +
annotate("text", x = 2.75, y = max(combined_data$y) + 0.5, label = expression(A[1]), color = "black", size = 5) +
annotate("text", x = 6.75, y = max(combined_data$y) + 0.5, label = expression(A[2]), color = "black", size = 5) +
annotate("text", x = 10.75, y = max(combined_data$y) + 0.5, label = expression(A[3]), color = "black", size = 5) +
labs(title = "Scatterplot of Combined Data Frames with Bins", x = "z", y = "y")
# Plot with vertical lines and bin labels
ggplot(combined_data, aes(x = z, y = y)) +
geom_point(color = "black", shape = 16) +  # Solid black points
geom_vline(xintercept = c(0.75, 4.75, 8.75, 12.75), linetype = "dashed", color = "black") +
annotate("text", x = 2.75, y = max(combined_data$y) + 0.5, label = expression(A[1]), color = "black", size = 5) +
annotate("text", x = 6.75, y = max(combined_data$y) + 0.5, label = expression(A[2]), color = "black", size = 5) +
annotate("text", x = 10.75, y = max(combined_data$y) + 0.5, label = expression(A[3]), color = "black", size = 5) +
labs(title = "Scatterplot of Combined Data Frames with Bins", x = "z", y = "y") +
theme_minimal()
# Plot with vertical lines and bin labels
ggplot(combined_data, aes(x = z, y = y)) +
geom_point(color = "black", shape = 16) +  # Solid black points
geom_vline(xintercept = c(0.75, 4.75, 8.75, 12.75), linetype = "dashed", color = "black") +
annotate("text", x = 2.75, y = max(combined_data$y) + 0.5, label = expression(A[1]), color = "black", size = 5) +
annotate("text", x = 6.75, y = max(combined_data$y) + 0.5, label = expression(A[2]), color = "black", size = 5) +
annotate("text", x = 10.75, y = max(combined_data$y) + 0.5, label = expression(A[3]), color = "black", size = 5) +
#labs(title = "Scatterplot of Combined Data Frames with Bins", x = "z", y = "y") +
theme_minimal()
# Plot with vertical lines and bin labels
ggplot(combined_data, aes(x = z, y = y)) +
geom_point(color = "black", shape = 16) +  # Solid black points
geom_vline(xintercept = c(0.75, 4.75, 8.75, 12.75), linetype = "dashed", color = "black") +
annotate("text", x = 2.75, y = max(combined_data$y) + 0.5, label = expression(A[1]), color = "black", size = 5) +
annotate("text", x = 6.75, y = max(combined_data$y) + 0.5, label = expression(A[2]), color = "black", size = 5) +
annotate("text", x = 10.75, y = max(combined_data$y) + 0.5, label = expression(A[3]), color = "black", size = 5) +
labs( x = "Z", y = "Y") +
theme_minimal()
source("~/.active-rstudio-document", echo=TRUE)
median_bin_1
median_bin_2
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
p
num_points
# Plot with vertical lines and bin labels
p = ggplot(combined_data, aes(x = z, y = y)) +
geom_point(color = "black", shape = 16) +  # Solid black points
geom_vline(xintercept = c(0.75, 4.75, 8.75, 12.75), linetype = "solid", color = "black") +
annotate("text", x = 2.75, y = max(combined_data$y) + 0.5, label = expression(A[1]), color = "black", size = 5) +
annotate("text", x = 6.75, y = max(combined_data$y) + 0.5, label = expression(A[2]), color = "black", size = 5) +
annotate("text", x = 10.75, y = max(combined_data$y) + 0.5, label = expression(A[3]), color = "black", size = 5) +
# Add median lines for each bin
geom_segment(aes(x = 0.75, xend = 4.75, y = median_bin_1, yend = median_bin_1), color = "black", linetype = "dashed") +
geom_segment(aes(x = 4.75, xend = 8.75, y = median_bin_2, yend = median_bin_2), color = "black", linetype = "dashed") +
geom_segment(aes(x = 8.75, xend = 12.75, y = median_bin_3, yend = median_bin_3), color = "black", linetype = "dashed") +
labs( x = "Z", y = "Y") +
theme_minimal()
num_points <- min(nrow(bin_1_above_median), nrow(bin_2_below_median))  # Limit to the smallest set size
for (i in 1:num_points) {
p <- p + geom_segment(aes(
x = bin_1_above_median$z[i], y = bin_1_above_median$y[i],
xend = bin_2_below_median$z[i], yend = bin_2_below_median$y[i]
), color = "seagreen", linetype = "dotted")
}
p
num_points <- min(nrow(bin_1_above_median), nrow(bin_2_below_median))  # Limit to the smallest set size
for (i in 1:num_points) {
p <- p + geom_segment(aes(
x = bin_1_above_median$z[i], y = bin_1_above_median$y[i],
xend = bin_2_below_median$z[i], yend = bin_2_below_median$y[i]
), color = "skyblue", linetype = "dotted")
}
p
bin_1_above_median
i
bin_2_below_median
bin_1_above_median <- bin_1_data[bin_1_data$y > median_bin_1, ]
bin_1_above_median <- bin_1_above_median[order(bin_1_above_median$y,decreasing=TRUE), ]  # Sort in increasing order
bin_2_below_median <- bin_2_data[bin_2_data$y < median_bin_2, ]
bin_2_below_median <- bin_2_below_median[order(bin_2_below_median$y, decreasing = FALSE), ]  # Sort in decreasing order
num_points <- min(nrow(bin_1_above_median), nrow(bin_2_below_median))  # Limit to the smallest set size
for (i in 1:num_points) {
p <- p + geom_segment(aes(
x = bin_1_above_median$z[i], y = bin_1_above_median$y[i],
xend = bin_2_below_median$z[i], yend = bin_2_below_median$y[i]
), color = "skyblue", linetype = "dotted")
}
p
bin_1_above_median
bin_2_below_median
num_points <- min(nrow(bin_1_above_median), nrow(bin_2_below_median))
segments_data <- data.frame(
x = bin_1_above_median$z[1:num_points],
y = bin_1_above_median$y[1:num_points],
xend = bin_2_below_median$z[1:num_points],
yend = bin_2_below_median$y[1:num_points]
)
# Plot with vertical lines and bin labels
p = ggplot(combined_data, aes(x = z, y = y)) +
geom_point(color = "black", shape = 16) +  # Solid black points
geom_vline(xintercept = c(0.75, 4.75, 8.75, 12.75), linetype = "solid", color = "black") +
annotate("text", x = 2.75, y = max(combined_data$y) + 0.5, label = expression(A[1]), color = "black", size = 5) +
annotate("text", x = 6.75, y = max(combined_data$y) + 0.5, label = expression(A[2]), color = "black", size = 5) +
annotate("text", x = 10.75, y = max(combined_data$y) + 0.5, label = expression(A[3]), color = "black", size = 5) +
# Add median lines for each bin
geom_segment(aes(x = 0.75, xend = 4.75, y = median_bin_1, yend = median_bin_1), color = "black", linetype = "dashed") +
geom_segment(aes(x = 4.75, xend = 8.75, y = median_bin_2, yend = median_bin_2), color = "black", linetype = "dashed") +
geom_segment(aes(x = 8.75, xend = 12.75, y = median_bin_3, yend = median_bin_3), color = "black", linetype = "dashed") +
geom_segment(data = segments_data, aes(x = x, y = y, xend = xend, yend = yend), color = "green", linetype = "dotted") +
labs( x = "Z", y = "Y") +
theme_minimal()
p
# Plot with vertical lines and bin labels
p = ggplot(combined_data, aes(x = z, y = y)) +
geom_point(color = "black", shape = 16) +  # Solid black points
geom_vline(xintercept = c(0.75, 4.75, 8.75, 12.75), linetype = "solid", color = "black") +
annotate("text", x = 2.75, y = max(combined_data$y) + 0.5, label = expression(A[1]), color = "black", size = 5) +
annotate("text", x = 6.75, y = max(combined_data$y) + 0.5, label = expression(A[2]), color = "black", size = 5) +
annotate("text", x = 10.75, y = max(combined_data$y) + 0.5, label = expression(A[3]), color = "black", size = 5) +
# Add median lines for each bin
geom_segment(aes(x = 0.75, xend = 4.75, y = median_bin_1, yend = median_bin_1), color = "black", linetype = "dashed") +
geom_segment(aes(x = 4.75, xend = 8.75, y = median_bin_2, yend = median_bin_2), color = "black", linetype = "dashed") +
geom_segment(aes(x = 8.75, xend = 12.75, y = median_bin_3, yend = median_bin_3), color = "black", linetype = "dashed") +
geom_segment(data = segments_data, aes(x = x, y = y, xend = xend, yend = yend), color = "skyblue", linetype = "dotted") +
labs( x = "Z", y = "Y") +
theme_minimal()
# Plot with vertical lines and bin labels
ggplot(combined_data, aes(x = z, y = y)) +
geom_point(color = "black", shape = 16) +  # Solid black points
geom_vline(xintercept = c(0.75, 4.75, 8.75, 12.75), linetype = "solid", color = "black") +
annotate("text", x = 2.75, y = max(combined_data$y) + 0.5, label = expression(A[1]), color = "black", size = 5) +
annotate("text", x = 6.75, y = max(combined_data$y) + 0.5, label = expression(A[2]), color = "black", size = 5) +
annotate("text", x = 10.75, y = max(combined_data$y) + 0.5, label = expression(A[3]), color = "black", size = 5) +
# Add median lines for each bin
geom_segment(aes(x = 0.75, xend = 4.75, y = median_bin_1, yend = median_bin_1), color = "black", linetype = "dashed") +
geom_segment(aes(x = 4.75, xend = 8.75, y = median_bin_2, yend = median_bin_2), color = "black", linetype = "dashed") +
geom_segment(aes(x = 8.75, xend = 12.75, y = median_bin_3, yend = median_bin_3), color = "black", linetype = "dashed") +
geom_segment(data = segments_data, aes(x = x, y = y, xend = xend, yend = yend), color = "skyblue", linetype = "dotted") +
labs( x = "Z", y = "Y") +
theme_minimal()
# Plot with vertical lines and bin labels
ggplot(combined_data, aes(x = z, y = y)) +
geom_point(color = "black", shape = 16) +  # Solid black points
geom_vline(xintercept = c(0.75, 4.75, 8.75, 12.75), linetype = "solid", color = "black") +
annotate("text", x = 2.75, y = max(combined_data$y) + 0.5, label = expression(A[1]), color = "black", size = 5) +
annotate("text", x = 6.75, y = max(combined_data$y) + 0.5, label = expression(A[2]), color = "black", size = 5) +
annotate("text", x = 10.75, y = max(combined_data$y) + 0.5, label = expression(A[3]), color = "black", size = 5) +
# Add median lines for each bin
geom_segment(aes(x = 0.75, xend = 4.75, y = median_bin_1, yend = median_bin_1), color = "black", linetype = "dashed") +
geom_segment(aes(x = 4.75, xend = 8.75, y = median_bin_2, yend = median_bin_2), color = "black", linetype = "dashed") +
geom_segment(aes(x = 8.75, xend = 12.75, y = median_bin_3, yend = median_bin_3), color = "black", linetype = "dashed") +
geom_segment(data = segments_data, aes(x = x, y = y, xend = xend, yend = yend), color = "skyblue", linetype = "solid") +
labs( x = "Z", y = "Y") +
theme_minimal()
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
# Plot with vertical lines and bin labels
ggplot(combined_data, aes(x = z, y = y)) +
geom_point(color = "black", shape = 17) +  # Solid black points
geom_vline(xintercept = c(0.75, 4.75, 8.75, 12.75), linetype = "solid", color = "black") +
annotate("text", x = 2.75, y = max(combined_data$y) + 0.5, label = expression(A[1]), color = "black", size = 5) +
annotate("text", x = 6.75, y = max(combined_data$y) + 0.5, label = expression(A[2]), color = "black", size = 5) +
annotate("text", x = 10.75, y = max(combined_data$y) + 0.5, label = expression(A[3]), color = "black", size = 5) +
# Add median lines for each bin
geom_segment(aes(x = 0.75, xend = 4.75, y = median_bin_1, yend = median_bin_1), color = "black", linetype = "dashed") +
geom_segment(aes(x = 4.75, xend = 8.75, y = median_bin_2, yend = median_bin_2), color = "black", linetype = "dashed") +
geom_segment(aes(x = 8.75, xend = 12.75, y = median_bin_3, yend = median_bin_3), color = "black", linetype = "dashed") +
geom_segment(data = segments_data, aes(x = x, y = y, xend = xend, yend = yend), color = "skyblue", linetype = "solid") +
labs( x = "Z", y = "Y") +
theme_minimal()
# Plot with vertical lines and bin labels
ggplot(combined_data, aes(x = z, y = y)) +
geom_point(color = "black", shape = 16) +  # Solid black points
geom_vline(xintercept = c(0.75, 4.75, 8.75, 12.75), linetype = "solid", color = "black") +
annotate("text", x = 2.75, y = max(combined_data$y) + 0.5, label = expression(A[1]), color = "black", size = 5) +
annotate("text", x = 6.75, y = max(combined_data$y) + 0.5, label = expression(A[2]), color = "black", size = 5) +
annotate("text", x = 10.75, y = max(combined_data$y) + 0.5, label = expression(A[3]), color = "black", size = 5) +
# Add median lines for each bin
geom_segment(aes(x = 0.75, xend = 4.75, y = median_bin_1, yend = median_bin_1), color = "black", linetype = "dashed") +
geom_segment(aes(x = 4.75, xend = 8.75, y = median_bin_2, yend = median_bin_2), color = "black", linetype = "dashed") +
geom_segment(aes(x = 8.75, xend = 12.75, y = median_bin_3, yend = median_bin_3), color = "black", linetype = "dashed") +
geom_segment(data = segments_data, aes(x = x, y = y, xend = xend, yend = yend), color = "skyblue", linetype = "solid") +
labs( x = "Z", y = "Y") +
theme_minimal()
# Plot with vertical lines and bin labels
ggplot(combined_data, aes(x = z, y = y)) +
geom_point(color = "black", shape = 16) +  # Solid black points
geom_vline(xintercept = c(0.75, 4.75, 8.75, 12.75), linetype = "solid", color = "black") +
annotate("text", x = 2.75, y = max(combined_data$y) + 0.5, label = expression(A[1]), color = "black", size = 5) +
annotate("text", x = 6.75, y = max(combined_data$y) + 0.5, label = expression(A[2]), color = "black", size = 5) +
annotate("text", x = 10.75, y = max(combined_data$y) + 0.5, label = expression(A[3]), color = "black", size = 5) +
# Add median lines for each bin
geom_segment(aes(x = 0.75, xend = 4.75, y = median_bin_1, yend = median_bin_1), color = "black", linetype = "dashed") +
geom_segment(aes(x = 4.75, xend = 8.75, y = median_bin_2, yend = median_bin_2), color = "black", linetype = "dashed") +
geom_segment(aes(x = 8.75, xend = 12.75, y = median_bin_3, yend = median_bin_3), color = "black", linetype = "dashed") +
geom_segment(data = segments_data, aes(x = x, y = y, xend = xend, yend = yend), color = "skyblue", linetype = "solid") +
labs( x = "Z", y = "Y") +
theme_minimal()+
theme(
axis.text.x = element_blank(),
axis.text.y = element_blank()
)
source("~/.active-rstudio-document", echo=TRUE)
source("~/Documents/GitHub/shape-constrained-CIT/cross_bin_demo.R", echo=TRUE)
source("~/Documents/GitHub/shape-constrained-CIT/cross_bin_demo.R", echo=TRUE)
source("~/Documents/GitHub/shape-constrained-CIT/cross_bin_demo.R", echo=TRUE)
source("~/Documents/GitHub/shape-constrained-CIT/cross_bin_demo.R", echo=TRUE)
source("~/Documents/GitHub/shape-constrained-CIT/cross_bin_demo.R", echo=TRUE)
source("~/Documents/GitHub/shape-constrained-CIT/cross_bin_demo.R", echo=TRUE)
source("~/Documents/GitHub/shape-constrained-CIT/cross_bin_demo.R", echo=TRUE)
source("~/Documents/GitHub/shape-constrained-CIT/cross_bin_demo.R", echo=TRUE)
# Define the data frames
bin_1_data <- data.frame(
z = seq(1, 4.5, 0.5),
y = c(1, -0.4, 1.4, 3, -2, -1.2, 0.4, -1.1)
)
source("~/Documents/GitHub/shape-constrained-CIT/cross_bin_demo.R", echo=TRUE)
source("~/Documents/GitHub/shape-constrained-CIT/cross_bin_demo.R", echo=TRUE)
# Define the data frames
bin_1_data <- data.frame(
z = seq(1, 4.5, 0.5),
y = c(1, -0.4, 1.7, 3, -2, 0.8, -1.1, -1.5)
)
source("~/Documents/GitHub/shape-constrained-CIT/cross_bin_demo.R", echo=TRUE)
source("~/Documents/GitHub/shape-constrained-CIT/cross_bin_demo.R", echo=TRUE)
source("~/Documents/GitHub/shape-constrained-CIT/cross_bin_demo.R", echo=TRUE)
bin_2_data <- data.frame(
z = seq(5, 8.5, 0.5),
y = c(0.9, -1.5, 1.3, 2.2, -1.9, 1.1, -3, -0.9)
)
source("~/Documents/GitHub/shape-constrained-CIT/cross_bin_demo.R", echo=TRUE)
bin_2_data <- data.frame(
z = seq(5, 8.5, 0.5),
y = c(0.9, -1.5, 1.3, 2.2, 1.1, -1.9, -3, -0.9)
)
source("~/Documents/GitHub/shape-constrained-CIT/cross_bin_demo.R", echo=TRUE)
source("~/Documents/GitHub/shape-constrained-CIT/cross_bin_demo.R", echo=TRUE)
# Define the data frames
bin_1_data <- data.frame(
z = seq(1, 4.5, 0.5),
y = c(1, -0.4, 1.7, 3,0.8, -2, -1.1, -1.5)
)
source("~/Documents/GitHub/shape-constrained-CIT/cross_bin_demo.R", echo=TRUE)
bin_3_data <- data.frame(
z = seq(9, 12.5, 0.5),
y = c(2.3, 1.45, -1.5, 1.9, -2.1, 2.5, -1.3, -2.2)
)
source("~/Documents/GitHub/shape-constrained-CIT/cross_bin_demo.R", echo=TRUE)
source("~/Documents/GitHub/shape-constrained-CIT/cross_bin_demo.R", echo=TRUE)
source("~/Documents/GitHub/shape-constrained-CIT/cross_bin_demo.R", echo=TRUE)
bin_4_data <- data.frame(
z = seq(13, 16.5, 0.5),
y = c(1.3, 0.1, -1.5, -2.5, 2.1, -1.5, 1.2, -2.9)
)
source("~/Documents/GitHub/shape-constrained-CIT/cross_bin_demo.R", echo=TRUE)
bin_4_data <- data.frame(
z = seq(13, 16.5, 0.5),
y = c(1.3, 0.1, -1.5, -2.5, 2.1, 1.2, -1.5, -2.9)
)
source("~/Documents/GitHub/shape-constrained-CIT/cross_bin_demo.R", echo=TRUE)
source("~/Documents/GitHub/shape-constrained-CIT/cross_bin_demo.R", echo=TRUE)
source("~/Documents/GitHub/shape-constrained-CIT/cross_bin_demo.R", echo=TRUE)
source("~/Documents/GitHub/shape-constrained-CIT/cross_bin_demo.R", echo=TRUE)
# Define the data frames
bin_1_data <- data.frame(
z = seq(1, 4.5, 0.5),
y = c(1.8, 1.6, -1.1, 3, 0.1, -2, -1.5,-0.5)
)
source("~/Documents/GitHub/shape-constrained-CIT/cross_bin_demo.R", echo=TRUE)
source("~/Documents/GitHub/shape-constrained-CIT/cross_bin_demo.R", echo=TRUE)
source("~/Documents/GitHub/shape-constrained-CIT/cross_bin_demo.R", echo=TRUE)
source("~/Documents/GitHub/shape-constrained-CIT/cross_bin_demo.R", echo=TRUE)
source("~/Documents/GitHub/shape-constrained-CIT/cross_bin_demo.R", echo=TRUE)
bin_2_data <- data.frame(
z = seq(4, 6.5, 0.5),
y = c( -2.3, 1.2, -1.3, 1.9, -3, 0.5)
)
bin_2_data <- data.frame(
z = seq(4, 6.5, 0.5),
y = c( -2.3, 1.2, -1.3, 1.9, -3, 0.9)
)
source("~/Documents/GitHub/shape-constrained-CIT/cross_bin_demo.R", echo=TRUE)
bin_2_data <- data.frame(
z = seq(4, 6.5, 0.5),
y = c( -2.3, 1.2, -0.3, 1.9, -3, 0.9)
)
source("~/Documents/GitHub/shape-constrained-CIT/cross_bin_demo.R", echo=TRUE)
bin_2_data <- data.frame(
z = seq(4, 6.5, 0.5),
y = c( -2.3, 1.2, -0.3, 0.9, -3, 1.9)
)
source("~/Documents/GitHub/shape-constrained-CIT/cross_bin_demo.R", echo=TRUE)
bin_2_data <- data.frame(
z = seq(4, 6.5, 0.5),
y = c( -2.3, 1.2, -0.3, 0.9, 1.9,-3)
)
source("~/Documents/GitHub/shape-constrained-CIT/cross_bin_demo.R", echo=TRUE)
source("~/Documents/GitHub/shape-constrained-CIT/cross_bin_demo.R", echo=TRUE)
source("~/Documents/GitHub/shape-constrained-CIT/cross_bin_demo.R", echo=TRUE)
source("~/Documents/GitHub/shape-constrained-CIT/cross_bin_demo.R", echo=TRUE)
source("~/Documents/GitHub/shape-constrained-CIT/cross_bin_demo.R", echo=TRUE)
source("~/Documents/GitHub/shape-constrained-CIT/cross_bin_demo.R", echo=TRUE)
source("~/Documents/GitHub/shape-constrained-CIT/cross_bin_demo.R", echo=TRUE)
source("~/Documents/GitHub/shape-constrained-CIT/cross_bin_demo.R", echo=TRUE)
bin_2_data <- data.frame(
z = seq(4, 6.5, 0.5),
y = c( -2.3, 1.2,2.4, -0.3, 0.9,-3)
)
source("~/Documents/GitHub/shape-constrained-CIT/cross_bin_demo.R", echo=TRUE)
source("~/Documents/GitHub/shape-constrained-CIT/cross_bin_demo.R", echo=TRUE)
source("~/Documents/GitHub/shape-constrained-CIT/cross_bin_demo.R", echo=TRUE)
bin_4_data <- data.frame(
z = seq(10, 12.5, 0.5),
y = c(0.3, -2.5, -1.1, -1.5,2.2, -2.9)
)
source("~/Documents/GitHub/shape-constrained-CIT/cross_bin_demo.R", echo=TRUE)
source("~/Documents/GitHub/shape-constrained-CIT/cross_bin_demo.R", echo=TRUE)
source("~/Documents/GitHub/shape-constrained-CIT/cross_bin_demo.R", echo=TRUE)
source("~/Documents/GitHub/shape-constrained-CIT/cross_bin_demo.R", echo=TRUE)
source("~/Documents/GitHub/shape-constrained-CIT/cross_bin_demo.R", echo=TRUE)
source("~/Documents/GitHub/shape-constrained-CIT/cross_bin_demo.R", echo=TRUE)
source("~/Documents/GitHub/shape-constrained-CIT/cross_bin_demo.R", echo=TRUE)
sqrt(768)
27/2
sqrt(768/2)/2
sqrt(768/2)
source("~/Documents/GitHub/shape-constrained-CIT/cross_bin_demo.R", echo=TRUE)
sqrt(768)
